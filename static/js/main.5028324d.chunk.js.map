{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","listOfGoods","goods","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","state","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA8BE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAOA,IAAMC,EA5BD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENO,EAAY,YAAOD,GAYzB,OAVIH,IAAaP,EAASY,SACxBD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MACnCR,IAAaP,EAASiB,QAC/BN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAGvCd,GACFO,EAAaQ,UAGRR,EAYaS,CAClBnB,EAAiB,CAAEG,aAAYG,aAGjC,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBd,IAAaP,EAASY,SAAW,WAAa,IAC3EW,QAAS,kBAAMf,EAAYR,EAASY,WAHtC,iCAQA,wBACEU,KAAK,SACLD,UAAS,4BAAuBd,IAAaP,EAASiB,OAAS,WAAa,IAC5EM,QAAS,kBAAMf,EAAYR,EAASiB,SAHtC,4BAQA,wBACEK,KAAK,SACLD,UAAS,4BAAwBjB,EAA0B,GAAb,YAC9CmB,QAAS,kBAAMlB,GAAc,SAAAmB,GAAK,OAAKA,MAHzC,qBASEpB,GAAcG,IAAaP,EAASM,KAEhC,wBACEgB,KAAK,SACLD,UAAU,4BACVE,QA1Cd,WACElB,GAAc,GACdG,EAAYR,EAASM,OAqCX,mBAQC,QAIT,6BACE,6BAEIG,EAAYgB,KAAI,SAAAC,GAAI,OAAI,6BAAgBA,GAAPA,cCtG7CC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5028324d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  } else if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  function reset() {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  }\n\n  const listOfGoods = getReorderedGoods(\n    goodsFromServer, { isReversed, sortType },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== SortType.ALPHABET ? 'is-light' : ''}`}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== SortType.LENGTH ? 'is-light' : ''}`}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReversed ? 'is-light' : ''}`}\n          onClick={() => setIsReversed(state => !state)}\n        >\n          Reverse\n        </button>\n\n        {\n          isReversed || sortType !== SortType.NONE\n            ? (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={reset}\n              >\n                Reset\n              </button>\n            )\n            : (null)\n        }\n      </div>\n\n      <ul>\n        <ul>\n          {\n            listOfGoods.map(good => <li key={good}>{good}</li>)\n          }\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}